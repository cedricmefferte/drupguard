{{ form_start(form) }}
        {{ form_widget(form) }}
        <button class="btn btn-primary">{{ button_label|default('Save') }}</button>
{{ form_end(form) }}

<script>
    $(document).ready(function () {
        var $needEmail = $('#project_needEmail');
        $needEmail.change(function() {
            var $form = $(this).closest('form'),
                $email = $('.needEmail-group', $form),
                $emailLevelLabel = $('.emailLevel-group label', $form),
                $emailLevelValue = $('#project_emailLevel', $form);
            if($(this).prop('checked')) {
                $email.removeClass('d-none');
                $emailLevelLabel.append('<span class="required"> *</span>');
                $emailLevelValue.attr('required', 'required');
            }
            else {
                $email.addClass('d-none');
                $('span.required', $emailLevelLabel).remove();
                $emailLevelValue.val('');
                $emailLevelValue.removeAttr('required');
            }
        });

        var $hasCron = $('#project_hasCron');
        $hasCron.change(function() {
            var $form = $(this).closest('form'),
                $cronFreq = $('.hasCron-group', $form),
                $cronFreqLabel = $('.hasCron-group label', $form),
                $cronFrequencyValue = $('#project_cronFrequency', $form);
            if($(this).prop('checked')) {
                $cronFreq.removeClass('d-none');
                $cronFreqLabel.append('<span class="required"> *</span>');
                $cronFrequencyValue.attr('required', 'required');
            }
            else {
                $cronFreq.addClass('d-none');
                $('span.required', $cronFreqLabel).remove();
                $cronFrequencyValue.val('');
                $cronFrequencyValue.removeAttr('required');
            }
        });

        var $gitRemoteRepository = $('#project_gitRemoteRepository');
        $gitRemoteRepository.blur(function() {
            $.ajax({
                url : '/project/ajax/git-branches',
                type: 'POST',
                data : {gitRemoteRepository: $gitRemoteRepository.val()},
                success: function(data) {
                    var $gitBranches = $('#project_gitBranch');
                    $gitBranches.empty(); // remove old options
                    $.each(data, function(key,value) {
                        $gitBranches.append($("<option></option>")
                            .attr("value", value).text(key));
                    });
                }
            });
        });
    });
</script>